from datetime import datetime
from tkinter import *
import textwrap
import csv  #Imports
import tkinter 
from googlesearch import *
import webbrowser
from math import log
from random import randint, uniform
from signal import signal, SIGINT
from sys import exit, stdout

base = Tk()
base.title("BayBot")
base.geometry("{0}x{1}+0+0".format(base.winfo_screenwidth(), base.winfo_screenheight()))
base.resizable(width=FALSE, height=FALSE)

def send(event):
    message = EntryBox.get("1.0", 'end-1c').strip()
    EntryBox.delete("0.0",END)
    
    if msg != '':
       Chatlog.config(state=NORMAL)
       Chatlog.insert(END, current_time+' ', ("small","right","greycolour"))
       ChatLog.window_create(END, window=Label(ChatLog, fg="#000000", text=msg, 
       wraplength=200, font=("Arial", 10), bg="lightblue", bd=4, justify="left"))
       ChatLog.insert(END,'\n ', "left")
       ChatLog.config(foreground="#0000CC", font=("Helvetica", 9))
       ChatLog.yview(END)
       
        res = "Bot's response goes into here, elongating this message to test textwrap"  #bot Response
        ChatLog.insert(END, current_time+' ', ("small", "greycolour", "left"))
        ChatLog.window_create(END, window=Label(ChatLog, fg="#000000", text=res, 
        wraplength=200, font=("Arial", 10), bg="#DDDDDD", bd=4, justify="left"))
        ChatLog.insert(END, '\n ', "right")
        ChatLog.config(state=DISABLED)
        ChatLog.yview(END)
        
def send_by_button():
    getmsg = EntryBox.get("1.0", 'end-1c').strip()
    msg = textwrap.fill(getmsg,30)
    EntryBox.delete("0.0", END)

    if msg != '':
        ChatLog.config(state=NORMAL)
        ChatLog.insert(END, current_time, ("small","right","colour"))
        ChatLog.insert(END,msg + '\n\n',("right"))

        ChatLog.config(foreground="#0000CC", font=("Helvetica", 9))

        res = "Bot's response goes into here, elongating this message to test textwrap"
        ChatLog.insert(END, current_time, ("small", "colour"))
        ChatLog.insert(END,textwrap.fill(res,30)+'\n\n')

        ChatLog.config(state=DISABLED)
        ChatLog.yview(END)

# The Following two functions are defined to add a placeholder or text
def deletePlaceholder(event):
    Placeholder.place_forget()
    EntryBox.focus_set()    

def addPlaceholder(event):
    Placeholder.place(x=6 , y=421 , height=70 , width = 265)


#Add menus to the GUI
main_menu = Menu(base) 
file_menu = Menu(base)
file_menu.add_command(lable = "New..")
file_menu.add_command(label="Save As..")
file_menu.add_command(label="Exit")         
main_menu.add_cascade(label="File", menu=file_menu)
#Add the rest of the menu options to the main menu
main_menu.add_command(label="Edit")
main_menu.add_command(label="Quit")
base.config(menu=main_menu)

now = datetime.now()
current_time = now.strtime("%D - %H:%M \n")
# Create Chat window
ChatLog = Text(base, bd=0, height="500", width="400", font="Helvetica", wrap="word")
ChatLog.config(state=NORMAL)
ChatLog.tag_config("right", justify="right")
ChatLog.tag_config("small", font=("Helvetica", 7))
ChatLog.tag_config("colour", foreground="#333333")
ChatLog.insert(END, current_time, ("small","colour"))
ChatLog.insert(END,textwrap.fill(f"Hello, I am Baymax, your personal healthcare companion!!",30))
ChatLog.insert(END,'\n')
ChatLog.config(foreground="#0000CC", font=("Helvetica", 9))
ChatLog.config(state=DISABLED)
# Bind scrollbar to Chat window
scrollbar = Scrollbar(base, command=ChatLog.yview, cursor="double_arrow")
ChatLog['yscrollcommand'] = scrollbar.set

# Create Button to send message
SendButton = Button(base, font=("Comic Sans MS", 12, 'bold'), text="Send", width="8", height="25",
                    bd=0, fg="#750216", activebackground="#AAAAAA", bg="#999999", command=send_by_button)

# Create the box to enter message
EntryBox = Text(base, bd=0, fg="#000000", bg="#fff5f5", highlightcolor="#750216",
                width="29", height="5", font=("Arial",10), wrap="word")

#Placeholder config and text:
Placeholder = Text(base, bd=0, fg="#A0A0A0", bg="#fff5f5", highlightcolor="#750216",
                   width="29", height="5", font=("Arial",10), wrap="word")
Placeholder.insert("1.0", "Enter query here:")
# Place all components on the screen
scrollbar.place(x=1510, y=6, height=406)
ChatLog.place(x=6, y=6, height=410, width=1500)
EntryBox.place(x=6, y=421, height=70, width=1440)
SendButton.place(x=1450, y=421, height=70)
Placeholder.place(x=6, y=421, height=70, width=276)

Placeholder.bind("<FocusIn>", deletePlaceholder)
EntryBox.bind("<FocusOut>", addPlaceholder)



class MyLabel(Label):
    def __init__(self, master, filename):
        im = Image.open(filename)
        seq =  []
        try:
            while 1:
                seq.append(im.copy())
                im.seek(len(seq)) # skip to next frame
        except EOFError:
            pass # we're done

        try:
            self.delay = im.info['duration']
        except KeyError:
            self.delay = 100

        first = seq[0].convert('RGBA')
        self.frames = [ImageTk.PhotoImage(first)]

        Label.__init__(self, master, image=self.frames[0])

        temp = seq[0]
        for image in seq[1:]:
            temp.paste(image)
            frame = temp.convert('RGBA')
            self.frames.append(ImageTk.PhotoImage(frame))

        self.idx = 0

        self.cancel = self.after(self.delay, self.play)

    def play(self):
        self.config(image=self.frames[self.idx])
        self.idx += 1
        if self.idx == len(self.frames):
            self.idx = 0
        self.cancel = self.after(self.delay, self.play)        



anim1 = MyLabel(base, 'giphy.gif')
anim1.place(x=964, y=492)
anim2 = MyLabel(base, 'giphy.gif')
anim2.place(x=482, y=492)
anim3 = MyLabel(base, 'giphy.gif')
anim3.place(x=0, y=492)
anim4 = MyLabel(base, 'baymax.gif')
anim4.place(x=1250, y=650)
